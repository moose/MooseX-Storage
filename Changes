Revision history for MooseX-Storage

0.51      2016-02-10 20:06:41Z (TRIAL RELEASE)
  - support serialization of "maybe" types created by MooseX::Types (PR#12)

0.50      2015-05-05 20:09:42Z
  - revert changes in 0.49 for deeply-nested objects (see RT#104106)

0.49      2015-03-29 00:24:43Z
  - now handling more deeply-nested objects (PR#7, RT#81236, thanks Dmitry
    Latin!)
  - fix error in DateTime example (PR#8, thanks sillitoe!)

0.48      2014-10-12 02:01:31Z
  - switched the JSON serializer from JSON::Any to JSON::MaybeXS
  - interactive prompting at install time is now back!

0.47      2014-08-23 22:34:21Z
  - report the versions of all JSON and YAML backends during tests, in an
    attempt to track down an elusive bug
  - now properly serializing attributes that are set to the undefined value
    (github #6, thanks, Jason Pope!)
  - fix compatibility problem with MooseX::Role::Parameterized 1.03+ and
    MooseX::Storage::Format::JSONpm (some internal details changed that we
    were relying on)

0.46      2014-03-23 18:26:44Z
  - numerous small documentation clarifications and fixes

0.45      2013-12-22 00:48:10Z
  - new 'Value' type handler added (thanks David Golden)

0.44      2013-11-30 20:09:54Z
  - re-release to fix compile test

0.43      2013-09-11 01:47:40Z
  - removed use of deprecated Class::MOP::load_class

0.42      2013-09-08 18:00:22Z
  - all features are now configured as x_default => 1 in metadata (not yet
    supported by any cpan clients), signalling to automatically add to prereqs
    when installing non-interactively
  - re-release with properly encoded META.yml

0.41      2013-09-03 01:05:15Z
  - re-release with updated Dist::Zilla plugins to clear the dynamic_config
    flag in metadata
  - repository has moved to the GitHub Moose organization

0.40      2013-08-29 01:57:00Z
  - replaced last use of Best (held over since 2010!) to YAML::Any
  - fixed another test making use of optional features

0.39      2013-07-27 00:02:26Z
  - re-release as stable (full working Dist::Zilla conversion)

0.38      2013-07-20 16:42:03Z (TRIAL RELEASE)
  - re-release with new compile test, which properly declares all its prerequisites

0.37      2013-07-20 00:41:17Z (TRIAL RELEASE)
  - fixed compile tests so that modules using optional features are skipped
    (from 0.36-TRIAL)

0.36      2013-07-17 04:41:39Z (TRIAL RELEASE)
  - convert to Dist::Zilla, with new optional prereq handling

0.35    2013-07-15
  - properly skip optional tests when the required JSON backends aren't
    available

0.34    2013-06-20
  - JSON storage works when Cpanel::JSON::XS is the only JSON backend installed

0.33    2013-03-29
  - always JSONify data with sorted keys, to handle hash order randomization
    introduced in 5.17.* (RT#84287, Karen Etheridge)

0.32    2012-12-04
  - Change to use core Digest and Digest::SHA dists, rather than Digest::SHA1.
    RT#69811
  - Create a JSON::Any object, so setting $ENV{JSON_ANY_CONFIG} works.
    Adjust tests that were setting the wrong values and the default
    happened to work.
  - Don't rely on hash key order in tests (RT#81695)

0.31    2012-02-28
  - Add example for add_custom_type_handler to the MooseX::Storage::Engine docs. (perigrin)

  - Incorrect documentation for ->unpack method's inject parameter fixed.

  - The test suite now uses Test::Fatal instead of Test::Exception (Karen
    Etheridge).

0.30    2011-04-29
  - Make Makefile.PL features work again. RT#67170

0.29    2010-11-17
  - Remove use of Test::TempDir in favor of File::Temp (gphat)

0.28    2010-10-03
  - Make the engine_traits parameter be able to use a '+My::Trait::Name'
    prefix to specify a trait name which isn't in the
    MooseX::Storage::Engine::Trait namespace
  - Misc POD and test cleanups.

0.27    2010-04-15
  - use of parameterized roles (first added in 0.22) now works in Deferred
    Example: $object->freeze({ format => [ $role_name => \%args ] })

0.26    2010-03-25
  - Fix URI for repository in metadata.
  - Fix infinite recursion when collapsing objects which overload stringify
    to freeze themselves.

0.25    2010-03-09
  - Add support for Union types (bumps Moose dep to 0.99)

0.24    2010-01-11
  - Add additional YAML implementation tests.
  - Switch from using Best to YAML::Any.
  - Remove Test::YAML::Valid.

0.23    2009-11-10
  - Revert whitespace change in tests which breaks the tests if you
    have Test::YAML::Valid installed.

0.22    2009-11-05
  - Fix warnings when types do not have a parent type.
  - allow the use of roles outside MooseX::Storage:: (rjbs)
  - allow the use of parameterized roles (rjbs)

0.21    2009-07-14
  - Fix inconsistent dist versions with Perl::Version

0.20    2009-07-14
  - Add support for Storage( traits => [...] ) with a MooseX::Storage::Traits::XX
    namespace to alter the behaviour of the storage engine.
    (Suggestions for how to make this less fugly appreciated)
  - Add feature to disable cycle checking, either via engine trait or option
    - add docs & tests (including 1 TODO test)
  - Add feature to only serialize attributes whose predicate returns 'true'
  - Implement the unpack( $data, inject => {...} ) feature.
    - add docs & tests
  - Move Base::WithChecksum to build upon Basic.pm, avoid code duplication
  - Add extra test to ensure restoring fails if required argument isn't provided
  - Fix a bug where if a required constructor argument was not serialized, it was
    impossible to ->unpack again.

0.19    2009-07-14
  - Skip pod tests when not in author mode

0.18    2009-06-02
  - Fix test failures without JSON::Any. Patch from RT#46343 (Nicholas Clarke)
  - Added support for Maybe[...] constraints fixing RT#43165 (plu)

0.17    2009-04-06
  - Change MooseX::Storage::Engine to use get_all_attributes,
    rather than the deprecated compute_all_applicable_attributes (t0m)
  - Don't fail tests when Best is unavailable (t0m)

0.15    2008-09-29
  - MooseX::Storage
    - Remove use of deprecated alias_method routine
      which was causing issues when you used multiple
      Roles which used MooseX::Storage (t0m).

0.14    2008-06-22
  - MooseX::Storage::Engine
    - cycles are now tracked by refaddr instead
      of stringified object, which broke for any
      overloaded objects (Thanks to Jonathan Rockway)

  - Don't fail tests when YAML is unavailable

  - Use temporary files in test suite, instead of cwd

0.13    2008-05-24
  - MooseX::Storage::Engine:
    - added find_type_handler_for($name) method
      to make finding type handlers easier
    - improved error messages

  - removed Build.PL since Module::Install
    no longer supports it

0.12    2008-03-14
  - added build_requires for Test::Deep (awwaiid)
  - upped the Moose dependency to support the custom
    meta-attribute-traits

  - t/
    - fixing all the tests to properly skip if optional
      features are not being used, this should help get
      rid of all our CPANtester failures
      - tested against 5.10 as well

    - MooseX::Storage::Engine
      MooseX::Storage::Meta::Attribute::DoNotSerialize
      MooseX::Storage::Meta::Attribute::Trait::DoNotSerialize
      - adding meta-attribute-trait support for
        DoNotSerialize
        - added tests for this

0.11    2008-01-10
  - upped the Test::JSON dependency
    so that we use the version that
    supports JSON::Any
  - upped the JSON::Any requirement
  - minor test cleanups to handle
    optional dependencies better

  - MooseX::Storage::Engine
    - the numbers now have to numify (+0) in the
      expand/collapse so that certain JSON engines
      will not choke on them

0.10    2009-01-10
  - updated copyright information

  - MooseX::Storage::Deferred
    - added this role, which allows you to wait until
      you actually call a method to determine what
      formatter and/or IO engine you want to use
      - added tests for this

0.09    2007-10-23
  - MooseX::Storage::Util
    - added support to deal with utf8 strings correctly

  - MooseX::Storage::Engine::File
    MooseX::Storage::Engine::AtomicFile
    - fixed utf8 handling when storing string
      - added tests for this

  - t/
      - added an extra test for the utf8 handling

  - Change build system to Module::Install

0.08    2007-10-10
  - MooseX::Storage::Format::JSON
    - added support to deal with utf8 strings correctly

0.07    2007-09-27
  - MooseX::Storage::Format::Storable
    - this will use Storable to freeze/thaw objects
      - added tests for this

  - MooseX::Storage::IO::StorableFile
    - this will use Storable to load/store objects
      - added tests for this

  - t/
    - fixed tests in 030_with_checksum.t
      (thanks to sartak)

0.06    2007-08-07
  - MooseX::Storage::Engine
    - added the Bool type and fixed a few bugs
      that it exposed (thanks to Sartak)
      - added tests for this

0.05    2007-07-15
  - MooseX::Storage::Base::WithChecksum
    - Fixed minor issue where the WithChecksum would
      choke with a bad checksum due to odd Data::Dumper
      output.

  - t/
    - forced JSON::Any in the basic JSON tests to use
      JSON.pm since this is what Test::JSON uses and
      subtle (and annoying) issues can arise.

0.04    2007-07-03
  - MooseX::Storage::Util
    - made this more robust when it tries
      to use YAML and JSON loaders and fails
      to find one
      - fixed tests to reflect this

0.03    2007-06-27
  - MooseX::Storage::Util
    - this is a collection of useful tools
      for working with MooseX::Storage data
      - added docs and test

  - t/
    - added test for a custom type handler
    - fixed checksum test to skip if Digest::SHA1
      (our default) is not available

0.02    2007-06-08
  - MooseX::Storage::Base::WithChecksum
    - added a simple base role which makes a checksum of
      the data structure before packing, and checks the
      checksum before unpacking.
      - added tests for this

  - MooseX::Storage::Engine
    - better error reporting when cycles are found
    - class names are now stored as the full identifier
      (<class>-<version>-<authority>) and are checked
      when they are expanded.
      - added docs and tests for this

  - MooseX::Storage::Engine::IO::(AtomicFile, File)
    - added checks to make sure the file gets opened correctly
      and dies if it does not.

0.01    2007-04-30
  - This was Chris's idea originally (blame him), and
    we expanded on it to create what you see here :)

